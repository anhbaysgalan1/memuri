version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:latest
    environment:
      POSTGRES_USER: memuri
      POSTGRES_PASSWORD: memuri
      POSTGRES_DB: memuri
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U memuri"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching and as Celery broker
  redis:
    image: redis/redis-stack:latest      
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--loadmodule", "/usr/lib/redis/modules/redisearch.so"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5


  # Milvus for vector storage
  milvus:
    image: milvusdb/milvus:v2.5.10
    ports:
      - "19530:19530"
    volumes:
      - milvus_data:/var/lib/milvus
    environment:
      ETCD_ENDPOINTS: localhost:2379
      MINIO_ADDRESS: localhost:9000
    depends_on:
      - etcd
      - minio

  # Etcd for Milvus
  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - etcd_data:/etcd

  # MinIO for Milvus
  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - minio_data:/data
    command: minio server /data

  # Celery worker for async tasks
  celery_worker:
    build:
      context: .
      target: development
    command: celery -A memuri.workers.celery_app worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres
    environment:
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_URL=postgresql://memuri:memuri@postgres:5432/memuri

  # Celery beat for scheduled tasks
  celery_beat:
    build:
      context: .
      target: development
    command: celery -A memuri.workers.celery_app beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - celery_worker
    environment:
      - REDIS_URL=redis://redis:6379/0

  # SDK service
  memuri:
    build:
      context: .
      target: development
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - celery_worker
    environment:
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_URL=postgresql://memuri:memuri@postgres:5432/memuri
    ports:
      - "8000:8000"
    command: python -m memuri.cli --host 0.0.0.0 --port 8000

volumes:
  postgres_data:
  redis_data:
  milvus_data:
  etcd_data:
  minio_data: 